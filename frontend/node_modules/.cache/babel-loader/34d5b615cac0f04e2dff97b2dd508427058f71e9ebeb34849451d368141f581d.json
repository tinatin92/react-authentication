{"ast":null,"code":"import { redirect } from 'react-router-dom';\nexport function getTokenDuration() {\n  const storedexpirationDate = localStorage.getItem('experation');\n  const expirationDate = new Date(storedexpirationDate);\n  const now = new Date();\n}\nexport function getAuthToken() {\n  const token = localStorage.getItem('token');\n  return token;\n}\nexport function tokelLoader() {\n  return getAuthToken();\n}\nexport function checkAuthToken() {\n  const token = getAuthToken();\n  if (!token) {\n    return redirect('/');\n  }\n  return null;\n}","map":{"version":3,"names":["redirect","getTokenDuration","storedexpirationDate","localStorage","getItem","expirationDate","Date","now","getAuthToken","token","tokelLoader","checkAuthToken"],"sources":["C:/Users/Tinaty/OneDrive/Desktop/updated-react-course/auth/01-starting-project/frontend/src/util/auth.js"],"sourcesContent":["import {redirect} from 'react-router-dom'\r\n\r\nexport function getTokenDuration() {\r\n    const storedexpirationDate = localStorage.getItem('experation')\r\n    const expirationDate = new Date(storedexpirationDate)\r\n    const now = new Date()\r\n\r\n}\r\n\r\n\r\nexport function getAuthToken() {\r\n    const token = localStorage.getItem('token')\r\n    return token\r\n}\r\n\r\nexport function tokelLoader() {\r\n    return getAuthToken()\r\n}\r\n\r\nexport function checkAuthToken () {\r\n    const token = getAuthToken()\r\n\r\n    if(!token){\r\n        return redirect('/')\r\n    }\r\n\r\n    return null\r\n}"],"mappings":"AAAA,SAAQA,QAAQ,QAAO,kBAAkB;AAEzC,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EAC/B,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAC/D,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAACJ,oBAAoB,CAAC;EACrD,MAAMK,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;AAE1B;AAGA,OAAO,SAASE,YAAYA,CAAA,EAAG;EAC3B,MAAMC,KAAK,GAAGN,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAOK,KAAK;AAChB;AAEA,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC1B,OAAOF,YAAY,CAAC,CAAC;AACzB;AAEA,OAAO,SAASG,cAAcA,CAAA,EAAI;EAC9B,MAAMF,KAAK,GAAGD,YAAY,CAAC,CAAC;EAE5B,IAAG,CAACC,KAAK,EAAC;IACN,OAAOT,QAAQ,CAAC,GAAG,CAAC;EACxB;EAEA,OAAO,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}