{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tinaty\\\\OneDrive\\\\Desktop\\\\updated-react-course\\\\auth\\\\01-starting-project\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport { json } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const serchParams = new URL(request.url).searchParams();\n  const mode = serchParams.get('mode') || 'login';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'unsuported mode'\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["json","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","serchParams","URL","url","searchParams","mode","get","message","status","data","formData","authData","email","password","response","fetch","method","headers","body","JSON","stringify","$RefreshReg$"],"sources":["C:/Users/Tinaty/OneDrive/Desktop/updated-react-course/auth/01-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import { json } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action ({request}) {\n  \nconst serchParams = new URL(request.url).searchParams()\nconst mode = serchParams.get('mode') || 'login'\n\nif(mode !== 'login' && mode !== 'signup'){\n   throw json({message: 'unsuported mode'}, {status: 422})\n}\n\n const data =await  request.formData()\n\n const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n };\n\nconst response = await  fetch('http://localhost:8080/' + mode, {\n   method: \"POST\",\n   headers: {\n    'Content-Type': 'application/json'\n   },\n   body: JSON.stringify(authData)\n })\n}"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAE;EAACC;AAAO,CAAC,EAAE;EAEzC,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACC,YAAY,CAAC,CAAC;EACvD,MAAMC,IAAI,GAAGJ,WAAW,CAACK,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAE/C,IAAGD,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAC;IACtC,MAAMhB,IAAI,CAAC;MAACkB,OAAO,EAAE;IAAiB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAC1D;EAEC,MAAMC,IAAI,GAAE,MAAOT,OAAO,CAACU,QAAQ,CAAC,CAAC;EAErC,MAAMC,QAAQ,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACxBO,QAAQ,EAAEJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAChC,CAAC;EAEF,MAAMQ,QAAQ,GAAG,MAAOC,KAAK,CAAC,wBAAwB,GAAGV,IAAI,EAAE;IAC5DW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACR,cAAc,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC/B,CAAC,CAAC;AACH;AAAC,IAAAb,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}